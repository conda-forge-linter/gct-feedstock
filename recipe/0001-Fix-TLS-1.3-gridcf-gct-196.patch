From 8e794407934ad5a42505730499cc9be387ce215d Mon Sep 17 00:00:00 2001
From: Chris Burr <christopher.burr@cern.ch>
Date: Fri, 20 May 2022 08:54:34 +0200
Subject: [PATCH] Fix TLS 1.3 (gridcf/gct#196)

---
 .../source/library/globus_i_gsi_gss_utils.c   |  7 ++
 gsi/gssapi/source/library/init_sec_context.c  | 85 ++-----------------
 2 files changed, 12 insertions(+), 80 deletions(-)

diff --git a/gsi/gssapi/source/library/globus_i_gsi_gss_utils.c b/gsi/gssapi/source/library/globus_i_gsi_gss_utils.c
index 3c0515553..6e40d8aa1 100644
--- a/gsi/gssapi/source/library/globus_i_gsi_gss_utils.c
+++ b/gsi/gssapi/source/library/globus_i_gsi_gss_utils.c
@@ -2365,6 +2365,13 @@ globus_i_gsi_gssapi_init_ssl_context(
     }
     #endif
 
+#if OPENSSL_VERSION_NUMBER >= 0x10101000L
+    /* When using TLS 1.3 OpenSSL sends two tickets after the handshake is
+     * complete. As this isn't useful here and can break the gsi authentication
+     * flow disable them entirely. */
+    SSL_CTX_set_num_tickets(cred_handle->ssl_context, 0);
+#endif
+
     SSL_CTX_set_cert_verify_callback(cred_handle->ssl_context,
                                      globus_gsi_callback_X509_verify_cert,
                                      NULL);
diff --git a/gsi/gssapi/source/library/init_sec_context.c b/gsi/gssapi/source/library/init_sec_context.c
index 55086e935..911665b32 100644
--- a/gsi/gssapi/source/library/init_sec_context.c
+++ b/gsi/gssapi/source/library/init_sec_context.c
@@ -54,8 +54,6 @@ GSS_CALLCONV gss_init_sec_context(
     OM_uint32                           local_major_status;
     globus_result_t                     local_result;
     int                                 rc;
-    unsigned char *                     tbuf = NULL;
-    size_t                              tlen = 0;
     char                                cbuf[1];
     gss_OID                             actual_mech = GSS_C_NO_OID;
     globus_gsi_cert_utils_cert_type_t   cert_type;
@@ -202,8 +200,11 @@ GSS_CALLCONV gss_init_sec_context(
             *ret_flags = 0 ;
         }
     }
-    else if (input_token->length > 0)
+    else
     {
+        /* first time there is no input token, but after that
+         * there will always be one
+         */
         major_status = globus_i_gsi_gss_put_token(&local_minor_status,
                                                   context,
                                                   NULL,
@@ -365,19 +366,6 @@ GSS_CALLCONV gss_init_sec_context(
         context->ret_flags |= GSS_C_TRANS_FLAG;
 #       endif
 
-        /*
-         * TLS v1.3 sends 2 session tokens after the handshake is completed.
-         * We need to recieve them before continuing with the GSI proxy.
-         */
-
-#       if defined(TLS1_3_VERSION)
-        if (SSL_version(context->gss_ssl) >= TLS1_3_VERSION)
-        {
-            context->gss_state = GSS_CON_ST_TOKEN1;
-            break;
-        }
-#       endif
-
         /*
          * IF we are talking to a real SSL server,
          * we don't want to do delegation, so we are done
@@ -406,76 +394,13 @@ GSS_CALLCONV gss_init_sec_context(
             break;
         }
 
-        goto flags;
-
-    case(GSS_CON_ST_TOKEN1):
-
-        if (input_token->length > 0)
-        {
-            tbuf = input_token->value;
-            tlen = ((unsigned int)tbuf[3] << 8) + (unsigned int)tbuf[4];
-
-            if (input_token->length == tlen + 5)
-            {
-                context->gss_state=GSS_CON_ST_TOKEN2;
-                break;
-            }
-
-            if (input_token->length < tlen + 10)
-            {
-                major_status = GSS_S_UNAUTHORIZED;
-                GLOBUS_GSI_GSSAPI_ERROR_RESULT(
-                    minor_status,
-                    GLOBUS_GSI_GSSAPI_ERROR_TOKEN_FAIL,
-                    (_GGSL("Failed identifying TLS session token 1")));
-                context->gss_state = GSS_CON_ST_DONE;
-                break;
-            }
-
-            tbuf = &tbuf[tlen + 5];
-        }
-
-    case(GSS_CON_ST_TOKEN2):
-
-        if (input_token->length > 0)
-        {
-            if (tbuf == NULL)
-            {
-                tbuf = input_token->value;
-            }
-            tlen = ((unsigned int)tbuf[3] << 8) + (unsigned int)tbuf[4];
-
-            if (input_token->value + input_token->length != tbuf + tlen + 5)
-            {
-                major_status = GSS_S_UNAUTHORIZED;
-                GLOBUS_GSI_GSSAPI_ERROR_RESULT(
-                    minor_status,
-                    GLOBUS_GSI_GSSAPI_ERROR_TOKEN_FAIL,
-                    (_GGSL("Failed identifying TLS session token 2")));
-                context->gss_state = GSS_CON_ST_DONE;
-                break;
-            }
-        }
-
-        /*
-         * IF we are talking to a real SSL server,
-         * we don't want to do delegation, so we are done
-         */
-
-        if (context->req_flags & GSS_C_GLOBUS_SSL_COMPATIBLE)
-        {
-            context->gss_state = GSS_CON_ST_DONE;
-            break;
-        }
-
     case(GSS_CON_ST_FLAGS):
 
-        if (tbuf == NULL && input_token->length > 0)
+        if (input_token->length > 0)
         {
             BIO_read(context->gss_sslbio, cbuf, 1);
         }
 
-    flags:
         /* send D if we want delegation, 0 otherwise */
 
         if (context->req_flags & GSS_C_DELEG_FLAG)
-- 
2.36.0

